schema_version: '1.1'
profile_name: Linux — общие проверки жёсткого профиля
description: Повторно используемые проверки для Linux-дистрибутивов.
vars:
  SHADOW_PERM_PATTERN: ^(000|600)$
  GSHADOW_PERM_PATTERN: ^(000|600)$
  SUID_MAX_PATTERN: ^([0-2]?[0-9]|30)$
checks:
- id: check_ssh_root_login
  name: 'SSH: RootLogin запрещён'
  module: system
  command: sshd -T | grep -i '^permitrootlogin' | awk '{print $2}'
  expect: 'no'
  assert_type: exact
  severity: high
  tags:
    fstec:
    - ИАФ.1
    - УПД.5
    cis: 5.2.8
    stig: SSH-RootLogin
- id: check_ssh_password_auth_off
  name: 'SSH: PasswordAuthentication отключён'
  module: system
  command: sshd -T | grep -i '^passwordauthentication' | awk '{print $2}'
  expect: 'no'
  assert_type: exact
  severity: high
  tags:
    fstec:
    - ИАФ.1
    - ИАФ.4
    cis: 5.2.9
    stig: SSH-PasswordAuth
- id: check_ssh_protocol2
  name: 'SSH: Protocol 2'
  module: system
  command: sshd -T | grep -i '^protocol' | awk '{print $2}'
  expect: '2'
  assert_type: exact
  severity: medium
  tags:
    fstec:
    - ЗИС.11
    cis: 5.2.2
    stig: SSH-Proto
- id: check_ssh_permit_empty_passwords
  name: 'SSH: Запрет пустых паролей (PermitEmptyPasswords no)'
  module: system
  command: sshd -T | grep -i '^permitemptypasswords' | awk '{print $2}'
  expect: 'no'
  assert_type: exact
  severity: high
  tags:
    fstec:
    - ИАФ.4
    cis: 5.4.1
    stig: SSH-EmptyPw
- id: check_ssh_hostbased_auth
  name: 'SSH: HostbasedAuthentication отключён'
  module: system
  command: sshd -T | grep -i '^hostbasedauthentication' | awk '{print $2}'
  expect: 'no'
  assert_type: exact
  severity: medium
  tags:
    fstec:
    - ИАФ.1
    cis: 5.2.15
    stig: SSH-Hostbased
- id: check_ssh_x11_forwarding
  name: 'SSH: X11Forwarding отключён'
  module: system
  command: sshd -T | grep -i '^x11forwarding' | awk '{print $2}'
  expect: 'no'
  assert_type: exact
  severity: medium
  tags:
    fstec:
    - УПД.2
    - ЗИС.3
    cis: 5.2.12
    stig: SSH-X11
- id: check_ssh_alive_intervals
  name: 'SSH: Таймауты сессий (ClientAliveInterval≤300, ClientAliveCountMax≤2)'
  module: system
  command: echo $(sshd -T | grep -i '^clientaliveinterval' | awk '{print $2}') $(sshd
    -T | grep -i '^clientalivecountmax' | awk '{print $2}')
  expect: ^(?:[0-9]|[1-9][0-9]|[12][0-9]{2}|300) (?:0|1|2)$
  assert_type: regexp
  severity: medium
  tags:
    fstec:
    - УПД.10
    cis: 5.2.13
    stig: SSH-Timeouts
- id: check_ssh_max_auth_tries
  name: 'SSH: MaxAuthTries ≤ 4'
  module: system
  command: sshd -T | grep -i '^maxauthtries' | awk '{print $2}'
  expect: ^[1-4]$
  assert_type: regexp
  severity: high
  tags:
    fstec:
    - УПД.6
    cis: 5.2.16
    stig: SSH-MaxAuthTries
- id: check_ssh_no_weak_ciphers
  name: 'SSH: нет слабых шифров (arcfour/rc4/blowfish/3des/aes128-cbc)'
  module: system
  command: sshd -T | grep -i '^ciphers' | awk '{$1=""; print $0}' | egrep '(arcfour|rc4|blowfish-cbc|3des-cbc|aes128-cbc)'
    || true
  expect: ''
  assert_type: exact
  severity: high
  tags:
    fstec:
    - ЗИС.11
    - ЗИС.3
    cis: 5.2.19
    stig: SSH-Ciphers-Weak-None
- id: check_ssh_no_weak_macs
  name: 'SSH: нет слабых MAC (hmac-md5/hmac-sha1)'
  module: system
  command: sshd -T | grep -i '^macs' | awk '{$1=""; print $0}' | egrep '(hmac-md5|hmac-md5-96|hmac-sha1[^,])'
    || true
  expect: ''
  assert_type: exact
  severity: high
  tags:
    fstec:
    - ЗИС.11
    - ЗИС.3
    cis: 5.2.20
    stig: SSH-MACs-Weak-None
- id: check_ssh_no_weak_kex
  name: 'SSH: нет слабых KEX (diffie-hellman-group1/14-sha1)'
  module: system
  command: sshd -T | grep -i '^kexalgorithms' | awk '{$1=""; print $0}' | egrep '(diffie-hellman-group1-sha1|diffie-hellman-group14-sha1)'
    || true
  expect: ''
  assert_type: exact
  severity: high
  tags:
    fstec:
    - ЗИС.11
    - ЗИС.3
    cis: 5.2.21
    stig: SSH-KEX-Weak-None
- id: check_ssh_ciphers_defined
  name: 'SSH: Ciphers заданы явно (современные)'
  module: system
  command: sshd -T | grep -i '^ciphers' || true
  expect: ciphers
  assert_type: contains
  severity: medium
  tags:
    fstec:
    - ЗИС.11
    cis: 5.2.19
    stig: SSH-Ciphers-Defined
- id: check_ssh_macs_defined
  name: 'SSH: MACs заданы явно (современные)'
  module: system
  command: sshd -T | grep -i '^macs' || true
  expect: macs
  assert_type: contains
  severity: medium
  tags:
    fstec:
    - ЗИС.11
    cis: 5.2.20
    stig: SSH-MACs-Defined
- id: check_ssh_kex_defined
  name: 'SSH: KexAlgorithms заданы явно (современные)'
  module: system
  command: sshd -T | grep -i '^kexalgorithms' || true
  expect: kexalgorithms
  assert_type: contains
  severity: medium
  tags:
    fstec:
    - ЗИС.11
    cis: 5.2.21
    stig: SSH-KEX-Defined
- id: check_pwquality_minlen
  name: 'Парольная политика: minlen ≥ 12'
  module: system
  command: grep -E '^[[:space:]]*minlen' /etc/security/pwquality.conf | grep -v '^[[:space:]]*#'
    | awk -F= '{print $2}' | tr -d ' ' || echo 0
  expect: ^(1[2-9]|[2-9][0-9])$
  assert_type: regexp
  severity: high
  tags:
    fstec:
    - ИАФ.4
    cis: 5.4.1.1
    stig: PW-Policy
- id: check_auditd_active
  name: auditd активен
  module: system
  command: systemctl is-active auditd || echo inactive
  expect: active
  assert_type: exact
  severity: high
  tags:
    fstec:
    - РСБ.3
    - РСБ.7
    cis: 4.1.1.3
    stig: Auditd-Run
- id: check_journald_limit
  name: 'journald: задан лимит SystemMaxUse'
  module: system
  command: grep -E '^[[:space:]]*SystemMaxUse=' /etc/systemd/journald.conf || true
  expect: SystemMaxUse=
  assert_type: contains
  severity: medium
  tags:
    fstec:
    - РСБ.1
    - РСБ.4
    cis: '4.2'
    stig: Logs-Limit
- id: check_journald_storage_persistent
  name: 'journald: Storage=persistent'
  module: system
  command: grep -E '^[[:space:]]*Storage=' /etc/systemd/journald.conf | grep -v '^[[:space:]]*#'
    || echo 'Storage=auto'
  expect: Storage=persistent
  assert_type: contains
  severity: medium
  tags:
    fstec:
    - РСБ.3
    cis: '4.2'
    stig: Logs-Storage
- id: check_shadow_perms
  name: '/etc/shadow: 000 или 600 (подходы у RHEL-семейства)'
  module: fs
  command: stat -c '%a' /etc/shadow
  expect: '{{ SHADOW_PERM_PATTERN }}'
  assert_type: regexp
  severity: high
  tags:
    fstec:
    - УПД.2
    cis: 6.1.2
    stig: FilePerm-Shadow
- id: check_gshadow_perms
  name: /etc/gshadow имеет 000 или 600
  module: fs
  command: stat -c '%a' /etc/gshadow
  expect: '{{ GSHADOW_PERM_PATTERN }}'
  assert_type: regexp
  severity: high
  tags:
    fstec:
    - УПД.2
    cis: 6.1.6
    stig: FilePerm-Gshadow
- id: check_world_writable_outside_tmp
  name: Нет world-writable файлов вне /tmp
  module: fs
  command: find / -xdev -type f -perm -0002 ! -path '/tmp/*' 2>/dev/null | head -n
    1 | wc -l
  expect: '0'
  assert_type: exact
  severity: high
  tags:
    fstec:
    - УПД.2
    cis: 1.1.21
    stig: WW-Files
- id: check_suid_count
  name: Количество SUID ≤ 30
  module: fs
  command: find / -xdev -type f -perm -4000 2>/dev/null | wc -l
  expect: '{{ SUID_MAX_PATTERN }}'
  assert_type: regexp
  severity: medium
  tags:
    fstec:
    - ОПС.1
    cis: 6.1.13
    stig: SUID-Count
- id: check_root_cron_empty
  name: У root нет активных cron-заданий
  module: cron
  command: crontab -u root -l 2>/dev/null | grep -v '^#' | grep -v '^$' | wc -l
  expect: '0'
  assert_type: exact
  severity: low
  tags:
    fstec:
    - ОПС.1
    cis: 5.1.2
    stig: Cron-Root
- id: check_cron_allow_deny
  name: 'cron: /etc/cron.allow существует, /etc/cron.deny пуст или отсутствует'
  module: cron
  command: ([ -f /etc/cron.allow ] && ! [ -s /etc/cron.deny ]) && echo 'OK' || echo
    'FAIL'
  expect: OK
  assert_type: exact
  severity: medium
  tags:
    fstec:
    - УПД.2
    cis: 5.1.8
    stig: Cron-Access
- id: check_sudo_secure_path
  name: 'Sudo: включён secure_path'
  module: system
  command: grep -rhE '^[[:space:]]*Defaults.*secure_path' /etc/sudoers /etc/sudoers.d/
    | head -n1 || true
  expect: secure_path
  assert_type: contains
  severity: medium
  tags:
    fstec:
    - ОПС.1
    cis: 5.3.3
    stig: Sudo-SecurePath
- id: check_ip_forward_disabled
  name: IP forwarding отключён (IPv4)
  module: network
  command: sysctl -n net.ipv4.ip_forward 2>/dev/null || echo 0
  expect: '0'
  assert_type: exact
  severity: medium
  tags:
    fstec:
    - ЗИС.3
    cis: 3.1.1
    stig: Kernel-IPv4-Forward
- id: check_icmp_redirects_disabled
  name: ICMP redirects отключены (accept & send)
  module: network
  command: echo $(sysctl -n net.ipv4.conf.all.accept_redirects 2>/dev/null || echo
    0) $(sysctl -n net.ipv4.conf.all.send_redirects 2>/dev/null || echo 0)
  expect: ^0 0$
  assert_type: regexp
  severity: medium
  tags:
    fstec:
    - ЗИС.3
    cis: 3.2.2
    stig: ICMP-Redirects
- id: check_source_route_disabled
  name: Source routing отключён
  module: network
  command: sysctl -n net.ipv4.conf.all.accept_source_route 2>/dev/null || echo 0
  expect: '0'
  assert_type: exact
  severity: medium
  tags:
    fstec:
    - ЗИС.3
    cis: 3.3.1
    stig: SRC-Route
- id: check_rp_filter
  name: Reverse Path Filtering включён (rp_filter=1 или 2)
  module: network
  command: sysctl -n net.ipv4.conf.all.rp_filter 2>/dev/null || echo 0
  expect: ^[12]$
  assert_type: regexp
  severity: medium
  tags:
    fstec:
    - ЗИС.3
    cis: 3.3.7
    stig: RP-Filter
- id: check_tcp_syncookies
  name: TCP SYN cookies включены
  module: network
  command: sysctl -n net.ipv4.tcp_syncookies 2>/dev/null || echo 0
  expect: '1'
  assert_type: exact
  severity: medium
  tags:
    fstec:
    - ЗИС.3
    cis: 3.3.10
    stig: TCP-Syncookies
- id: check_log_martians
  name: Логирование подозрительных пакетов (log_martians=1)
  module: network
  command: sysctl -n net.ipv4.conf.all.log_martians 2>/dev/null || echo 0
  expect: '1'
  assert_type: exact
  severity: low
  tags:
    fstec:
    - ЗИС.3
    cis: 3.3.8
    stig: Log-Martians
- id: check_firewall_active
  name: Активен фаервол (firewalld/nftables/iptables — любой)
  module: network
  command: systemctl is-active firewalld || systemctl is-active nftables || systemctl
    is-active iptables || echo inactive
  expect: active
  assert_type: exact
  severity: medium
  tags:
    fstec:
    - УПД.3
    - ЗИС.3
    cis: '3.5'
    stig: Firewall-Active
- id: check_time_sync_ntp
  name: 'Время: timedatectl сообщает о синхронизации'
  module: services
  command: timedatectl show -p NTPSynchronized --value 2>/dev/null || echo no
  expect: 'yes'
  assert_type: exact
  severity: medium
  tags:
    fstec:
    - РСБ.6
- id: check_time_sync_service
  name: 'Время: активен chronyd/systemd-timesyncd'
  module: services
  command: systemctl is-active chronyd || systemctl is-active systemd-timesyncd ||
    echo inactive
  expect: active
  assert_type: exact
  severity: medium
  tags:
    fstec:
    - РСБ.6
- id: check_issue_banner_present
  name: Баннер /etc/issue непустой
  module: system
  command: test -s /etc/issue && echo OK || echo FAIL
  expect: OK
  assert_type: exact
  severity: medium
  tags:
    fstec:
    - УПД.7
- id: check_ssh_banner_enabled
  name: 'SSH: задан и наполнен баннер'
  module: system
  command: banner=$(sshd -T | awk '/^banner /{print $2}'); if [ -n "$banner" ] &&
    [ -f "$banner" ] && [ -s "$banner" ]; then echo OK; else echo FAIL; fi
  expect: OK
  assert_type: exact
  severity: medium
  tags:
    fstec:
    - УПД.7
- id: check_pam_lastlog
  name: 'PAM: включено pam_lastlog без silent'
  module: users
  command: grep -rhE '^[[:space:]]*session.*pam_lastlog\.so(?!.*silent)' /etc/pam.d/
    | head -n1
  expect: pam_lastlog.so
  assert_type: contains
  severity: medium
  tags:
    fstec:
    - УПД.8
- id: check_pam_limits_present
  name: 'PAM: подключён pam_limits'
  module: users
  command: grep -rhE '^[[:space:]]*session.*pam_limits\.so' /etc/pam.d/ | head -n1
  expect: pam_limits.so
  assert_type: contains
  severity: medium
  tags:
    fstec:
    - УПД.9
- id: check_maxlogins_threshold
  name: MaxLogins ≤ 10
  module: users
  command: grep -E '^[[:space:]]*\*?[[:space:]]+hard[[:space:]]+maxlogins' /etc/security/limits.conf
    /etc/security/limits.d/* 2>/dev/null | awk '{print $NF}' | sort -n | head -n1
    || echo 0
  expect: 10
  assert_type: int_lte
  severity: medium
  tags:
    fstec:
    - УПД.9
- id: check_pass_max_days_policy
  name: PASS_MAX_DAYS ≤ 90
  module: users
  command: awk '/^PASS_MAX_DAYS/{print $2}' /etc/login.defs || echo 999
  expect: 90
  assert_type: int_lte
  severity: high
  tags:
    fstec:
    - АНЗ.5
- id: check_pass_min_days_policy
  name: PASS_MIN_DAYS ≥ 1
  module: users
  command: awk '/^PASS_MIN_DAYS/{print $2}' /etc/login.defs || echo 0
  expect: ^([1-9][0-9]*)$
  assert_type: regexp
  severity: high
  tags:
    fstec:
    - АНЗ.5
- id: check_pass_warn_age_policy
  name: PASS_WARN_AGE ≥ 7
  module: users
  command: awk '/^PASS_WARN_AGE/{print $2}' /etc/login.defs || echo 0
  expect: ^([7-9]|[1-9][0-9]+)$
  assert_type: regexp
  severity: medium
  tags:
    fstec:
    - АНЗ.5
- id: check_user_inactive_policy
  name: useradd -D INACTIVE ≤ 30
  module: users
  command: useradd -D | awk -F= '/^INACTIVE/{print $2}' | tr -d ' ' || echo 0
  expect: 30
  assert_type: int_lte
  severity: medium
  tags:
    fstec:
    - АНЗ.5
- id: check_pam_pwhistory_remember
  name: 'PAM pwhistory: remember ≥ 4'
  module: users
  command: grep -rhE '^[[:space:]]*password.*pam_pwhistory\.so.*remember=([4-9]|[1-9][0-9]+)'
    /etc/pam.d/ | head -n1
  expect: remember=
  assert_type: contains
  severity: high
  tags:
    fstec:
    - АНЗ.5
- id: check_ipv6_hardening
  name: 'IPv6: отключены redirects/RA/router_solicitations'
  module: network
  command: echo $(sysctl -n net.ipv6.conf.all.accept_redirects 2>/dev/null || echo
    0) $(sysctl -n net.ipv6.conf.all.accept_ra 2>/dev/null || echo 0) $(sysctl -n
    net.ipv6.conf.all.router_solicitations 2>/dev/null || echo 0)
  expect: ^0 0 0$
  assert_type: regexp
  severity: medium
  tags:
    fstec:
    - ЗИС.3
- id: check_audit_rules_immutable
  name: 'auditd: включен immutable режим'
  module: services
  command: grep -Rhs '^-e[[:space:]]*2$' /etc/audit/rules.d/ /etc/audit/audit.rules
  expect: -e
  assert_type: contains
  severity: high
  tags:
    fstec:
    - РСБ.1
    - РСБ.2
    - РСБ.3
    - РСБ.7
- id: check_audit_rules_critical_keys
  name: 'auditd: правила для time-change/identity/access/perm_mod/mounts/modules/sudo'
  module: services
  command: missing=0; for key in time-change identity access perm_mod mounts modules
    sudo; do grep -Rhs "-k ${key}" /etc/audit/rules.d/ /etc/audit/audit.rules >/dev/null
    || missing=1; done; [ $missing -eq 0 ] && echo OK || echo FAIL
  expect: OK
  assert_type: exact
  severity: high
  tags:
    fstec:
    - РСБ.1
    - РСБ.2
    - РСБ.3
    - РСБ.7
- id: check_journald_forward_syslog
  name: 'journald: ForwardToSyslog=yes'
  module: services
  command: grep -E '^[[:space:]]*ForwardToSyslog=yes' /etc/systemd/journald.conf 2>/dev/null
    || echo missing
  expect: ForwardToSyslog=yes
  assert_type: contains
  severity: medium
  tags:
    fstec:
    - РСБ.7
- id: check_logrotate_installed
  name: logrotate установлен и исполняем
  module: services
  command: test -x /usr/sbin/logrotate && echo OK || echo FAIL
  expect: OK
  assert_type: exact
  severity: medium
  tags:
    fstec:
    - РСБ.7
- id: check_logrotate_rules_exist
  name: 'logrotate: есть правила в /etc/logrotate.d'
  module: services
  command: find /etc/logrotate.d -type f 2>/dev/null | head -n1
  expect: ^/
  assert_type: regexp
  severity: low
  tags:
    fstec:
    - РСБ.7
- id: check_var_log_permissions
  name: /var/log имеет права ≤ 750
  module: fs
  command: stat -c '%a' /var/log 2>/dev/null || echo 777
  expect: 750
  assert_type: int_lte
  severity: medium
  tags:
    fstec:
    - РСБ.7
- id: check_usb_storage_blacklist
  name: usb-storage занесён в blacklist
  module: fs
  command: grep -RhsE '^[[:space:]]*blacklist[[:space:]]+usb-storage' /etc/modprobe.d/
    || true
  expect: usb-storage
  assert_type: contains
  severity: medium
  tags:
    fstec:
    - ЗНИ.5
    - ЗНИ.6
    - ЗНИ.7
- id: check_portable_mount_options
  name: Съёмные ФС смонтированы с nodev/nosuid/noexec
  module: fs
  command: "findmnt -nr -t vfat,exfat,ntfs --output OPTIONS 2>/dev/null |\nawk '\n\
    \  BEGIN { status = 0 }\n  {\n    opts = tolower($0);\n    if (opts !~ /nodev/\
    \ || opts !~ /nosuid/ || opts !~ /noexec/) {\n      status = 1\n    }\n  }\n \
    \ END {\n    if (status == 0) {\n      print \"OK\"\n    } else {\n      print\
    \ \"FAIL\"\n    }\n  }'\n"
  expect: OK
  assert_type: exact
  severity: medium
  tags:
    fstec:
    - ЗНИ.5
    - ЗНИ.6
    - ЗНИ.7
- id: check_udev_usb_rules
  name: Есть udev-правила, ограничивающие USB
  module: fs
  command: grep -RhsE 'SUBSYSTEM=="usb".*(MODE|ATTR|OPTIONS)' /etc/udev/rules.d/ 2>/dev/null
    | head -n1
  expect: SUBSYSTEM
  assert_type: contains
  severity: medium
  tags:
    fstec:
    - ЗНИ.5
    - ЗНИ.6
    - ЗНИ.7
- id: check_firewall_default_deny
  name: 'Фаервол: политика DROP по умолчанию'
  module: network
  command: "if command -v nft >/dev/null 2>&1; then\n  nft list ruleset | grep -E\
    \ 'hook (input|forward|output).*policy drop' | sort -u | wc -l\nelif command -v\
    \ iptables >/dev/null 2>&1; then\n  iptables -S | grep -E '^-P (INPUT|FORWARD|OUTPUT)\
    \ DROP' | wc -l\nelse\n  echo 0\nfi\n"
  expect: ^([3-9]|[1-9][0-9]+)$
  assert_type: regexp
  severity: high
  tags:
    fstec:
    - ЗИС.17
- id: check_grub_superusers
  name: 'GRUB: задан superusers'
  module: boot
  command: grep -E '^[[:space:]]*set[[:space:]]+superusers' /boot/grub*/grub.cfg 2>/dev/null
    || true
  expect: superusers
  assert_type: contains
  severity: high
  tags:
    fstec:
    - ЗИС.18
- id: check_grub_pbkdf2_hash
  name: 'GRUB: присутствует пароль (pbkdf2)'
  module: boot
  command: grep -Rhs 'grub.pbkdf2' /etc/grub.d/40_custom /etc/grub.d/* 2>/dev/null
    | head -n1
  expect: grub.pbkdf2
  assert_type: contains
  severity: high
  tags:
    fstec:
    - ЗИС.18
- id: check_secure_boot_state
  name: Secure Boot включён
  module: boot
  command: mokutil --sb-state 2>/dev/null | grep -iq enabled && echo enabled || echo
    disabled
  expect: enabled
  assert_type: exact
  severity: medium
  tags:
    fstec:
    - ЗИС.18
- id: check_updates_automation
  name: Автообновления пакетов настроены
  module: services
  command: "if systemctl is-active --quiet unattended-upgrades 2>/dev/null; then\n\
    \  echo active\nelif systemctl is-enabled --quiet dnf-automatic.timer 2>/dev/null;\
    \ then\n  echo active\nelif systemctl is-enabled --quiet apt-daily-upgrade.timer\
    \ 2>/dev/null; then\n  echo active\nelse\n  echo inactive\nfi\n"
  expect: active
  assert_type: exact
  severity: medium
  tags:
    fstec:
    - АНЗ.2
- id: check_tmout_policy
  name: TMOUT задан не менее 300 секунд
  module: users
  command: grep -RhsE '^[[:space:]]*TMOUT=([3-9][0-9]|[1-9][0-9]{2,})' /etc/profile
    /etc/bash.bashrc /etc/profile.d/* 2>/dev/null | head -n1
  expect: TMOUT
  assert_type: contains
  severity: medium
  tags:
    fstec:
    - УПД.10
